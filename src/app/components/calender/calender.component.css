.calender {
  display: flex;
  /* background-color: white; */
  z-index: 10;
  font-size: x-small;
  justify-content: center;
  align-items: center;
}

.hidden {
  display: none;
}

.calender-div {
  /* background-color: white; */
  flex-wrap: wrap;
  justify-content: space-evenly;
  border-radius: 25px;
  border: 6px solid whitesmoke;
  max-width: 365px;
  min-width: 365px;
}

.week-day-container {
  text-align: center;
}
.calender-controls {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
}

.calender-container {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  grid-gap: 2.5px;
  justify-content: center;
  align-items: center;
}

.day-container {
  display: flex;
  justify-content: center;
  align-items: center;

}

.calenderContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.calender-div a.selected {
  display: flex;
  margin-left: 27.5%;
  height: 20px;
  width: 20px;
    opacity: 90%;
  background-color: deeppink;

  border-radius: 50%;
}


.calenderControl{
  padding-top: 10px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
  width: 365px;

}

.previousMonth{
  background-color: deepskyblue;
  height: 20px;
  width: 20px;
  border-radius: 50%;

}
.nextMonth{
  background-color: yellow;
  height: 20px;
  width: 20px;
  border-radius: 50%;

}
/* 
.calender {
  display: flex;
  z-index: 10;
  font-size: x-small;
  justify-content: center;
  align-items: center;
}

.hidden {
  display: none;
}

.calender-div {

  flex-wrap: wrap;
  justify-content: space-evenly;
  border-radius: 25px;
  border: 6px solid whitesmoke;
  max-width: 365px;
  min-width: 365px;




}

.week-day-container {
  text-align: center;
}
.calender-controls {
  display: flex;

  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
}

.calender-container {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  grid-gap: 2.5px;
  justify-content: center;
  align-items: center;
}

.day-container {
  display: flex;
  justify-content: center;
  align-items: center;

}

.calenderContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.calender-div a.selected {
  display: flex;
  margin-left: 27.5%;
  height: 20px;
  width: 20px;
    opacity: 90%;
  background-color: deeppink;

  border-radius: 50%;
}

.previousMonth{
  background-color: deepskyblue;
  height: 20px;
  width: 20px;
  border-radius: 50%;

}
.nextMonth{
  background-color: yellow;
  height: 20px;
  width: 20px;
  border-radius: 50%;

}

.calenderControl{
  padding-top: 10px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
  width: 365px;

}
.col {
  background-color: none;

}

<br>
<div class="calenderContainer">
  <div class="calender-div">
    <div class="calender-controls">
      <b>{{ year }}</b>
      <!-- <div class = "previousMonth" (click)="previousMonth()" ></div> -->
      <b>{{ month }}</b>
      <!-- <div class = "nextMonth" (click)="nextMonth()" ></div> -->
      <b>{{ day }}</b>
    </div>
    <div class="calender-container">
      <div class="week-day-header" *ngFor="let weekDay of weekDays">
        <div class="week-day-container">{{ weekDay }}</div>
      </div>
      <a class="day-container" *ngFor="let day of monthDays"
         [class.selected]="day === selectedDay"
         (click)="daySelect(day)">
        {{ day }}
      </a>
    </div>
  </div>
  <div class = "calenderControl">
    <div class = "previousMonth col" (click)="previousMonth()" ></div>
    <div class = "nextMonth col" (click)="nextMonth()" ></div>
  </div>

 */
